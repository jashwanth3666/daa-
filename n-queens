#include <stdio.h>
#include <stdlib.h>

#define N 4  

int board[N][N];  // 2D array to represent the chessboard
int count = 0;

// Function to print the board configuration
void display() {
    printf("\nSolution %d:\n", ++count);
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (board[i][j])
                printf(" Q ");
            else
                printf(" . ");
        }
        printf("\n");
    }
}

// Function to check if it's safe to place a queen at (row, col)
int isSafe(int row, int col) {
    int i, j;

    // Check column above
    for (i = 0; i < row; i++)
        if (board[i][col])
            return 0;

    // Check upper-left diagonal
    for (i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return 0;

    // Check upper-right diagonal
    for (i = row - 1, j = col + 1; i >= 0 && j < N; i--, j++)
        if (board[i][j])
            return 0;

    return 1;
}

// Recursive backtracking function to solve N-Queens
void queen(int row) {
    if (row == N) {
        display();  // Found a valid solution
        return;
    }

    for (int col = 0; col < N; col++) {
        if (isSafe(row, col)) {
            board[row][col] = 1;       // Place queen
            queen(row + 1);            // Recurse for next row
            board[row][col] = 0;       // Backtrack
        }
    }
}

int main() {
    queen(0);  // Start placing queens from row 0
    printf("\nTotal solutions: %d\n", count);
    return 0;
}
